name: Frontend CD

on:
  workflow_dispatch: {}
  pull_request:
    branches: [ main ]
    paths:
      - 'frontend/**'

concurrency:
  group: frontend-prod
  cancel-in-progress: false

permissions:
  contents: read
  id-token: write  # required for OIDC to AWS

env:
  # ====== Configure these ======
  AWS_REGION: ap-southeast-2
  S3_BUCKET: ${{ secrets.AWS_S3_BUCKET}}            # or hardcode your bucket name
  CLOUDFRONT_DISTRIBUTION_ID: ${{ vars.CLOUDFRONT_DISTRIBUTION_ID }}
  FRONTEND_DIR: frontend
  BUILD_DIR: dist
  # =============================

jobs:
  deploy:
     name: Deploy to S3 + CloudFront
     needs: build
     runs-on: ubuntu-latest
     environment: production
     steps:
       - uses: actions/checkout@v4
       - uses: actions/setup-node@v4
         with: { node-version: '22'}
       - uses: pnpm/action-setup@v4
         with: { version: '9', run_install: false }
       - name: Install deps
         run: pnpm install
         working-directory: frontend
       - name: Build
         run: pnpm build
         working-directory: frontend
       - name: Configure AWS (OIDC + AssumeRole)
         if: env.S3_BUCKET != ''
         uses: aws-actions/configure-aws-credentials@v4
         with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: frontend-deploy

       - name: Sync to S3
         run: |
          aws s3 sync "dist" "s3://${S3_BUCKET}/" \
            --delete \
            --exact-timestamps \
            --only-show-errors \
            --metadata-directive REPLACE \
            --cache-control "max-age=300"

       - name: Invalidate CloudFront
         if: env.CLOUDFRONT_DISTRIBUTION_ID != ''
        run: |
          aws cloudfront create-invalidation \
            --distribution-id "${CLOUDFRONT_DISTRIBUTION_ID}" \
            --paths "/*"